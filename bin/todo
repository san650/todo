#!/usr/bin/env bash

COMMAND="$1"
shift

FOLDER=${TODO_PATH:-$HOME/.todo}
PROJECT=${TODO_PROJECT:-default}
FILE="$FOLDER/$PROJECT"
FILTER="$TODO_FILTER"

if [ ! -f "$FILE" ]; then
  touch "$FILE"
fi

function print_all
{
  cat -n $FILE
}

function print_pending
{
  if [ ! -z "$FILTER" ]; then
    echo "Filtering by: $FILTER"
    echo
  fi

  cat -n $FILE | sed -n '/- \[ \]/p' | grep "$FILTER"
}

function commit
{
  (cd "$FOLDER" \
    && git add "$FILE" \
    && git commit -m "$1" 2>&1 > /dev/null)
}

function init_repo
{
  if [ ! -d "$FOLDER" ]; then
    mkdir -p "$FOLDER"
    touch "$FILE"
  fi

  if [ ! -d "$FOLDER/.git" ]; then
    (cd "$FOLDER" \
      && git init --quiet \
      && git add --all \
      && git commit --quiet --message "Init new ToDo repo")
  fi
}

function list_projects
{
  (
    cd "$FOLDER" \
      && ls -1
  )
}

init_repo

case $COMMAND in
  "")
    print_pending
    ;;
  add)
    MESSAGE="$@"
    echo "- [ ] $MESSAGE" >> $FILE
    commit "Add ToDo item"
    ;;
  all)
    print_all
    ;;
  "done")
    sed -i.bak "$1s/\[ \]/[x]/" $FILE
    commit "Completed ToDo item #$1"
    ;;
  undone)
    sed -i.bak "$1s/\[x\]/[ ]/" $FILE
    commit "Undone ToDo item #$1"
    ;;
  filter)
    print_pending | grep "$1"
    ;;
  edit)
    if [ ! -z "$1" ] && [ ! -z "$2" ]; then
      LINE=$1
      shift
      MESSAGE="$@"

      sed -i.bak "${LINE}c\\
- [ ] $MESSAGE
" $FILE
    commit "Edit ToDo item #$LINE"
    else
      vim $FILE
      commit "Custom edit"
    fi
    ;;
  raw)
    cat $FILE
    ;;

  list)
    list_projects
    ;;

  *)
    echo "Error: command '$COMMAND' unknown

    Usage:
        todo
        todo add [message]
        todo all
        todo filter [keywords]
        todo edit [n] [message]
        todo done [n]
        todo undone [n]
        todo list
    "
    exit 1
    ;;
esac
